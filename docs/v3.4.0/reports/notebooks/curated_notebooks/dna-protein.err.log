Traceback (most recent call last):
  File "/Users/casp/miniconda3/envs/missionbio.mosaic/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/casp/miniconda3/envs/missionbio.mosaic/lib/python3.9/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/casp/miniconda3/envs/missionbio.mosaic/lib/python3.9/site-packages/jupyter_core/utils/__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
  File "/Users/casp/miniconda3/envs/missionbio.mosaic/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/Users/casp/miniconda3/envs/missionbio.mosaic/lib/python3.9/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/Users/casp/miniconda3/envs/missionbio.mosaic/lib/python3.9/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/casp/miniconda3/envs/missionbio.mosaic/lib/python3.9/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Specify the h5 file to be used in this analysis: h5path = '/path/to/h5/file/test.h5'
# If working with Windows, you may need to add an 'r' before the path: h5path = r'/path/to/h5/file/test.h5'
h5path = '/Users/botero/Desktop/Sample data/4-cell-lines-AML-multiomics/4-cell-lines-AML-multiomics.dna+protein.h5'

# Load the data
sample = ms.load(h5path, raw=False, filter_variants=True, single=True, whitelist = [], filter_cells=False) 

# Always set raw=False; if raw=True, ALL barcodes will be loaded (rather than cell-associated barcodes)
# Always set filter_variants=True unless you can't detect an expected (target) variant. Additional filtering options are included in the DNA section below
# The single=True option loads multi-sample h5 files as a single sample object (compatible with this notebook)
# The whitelist option loads any variant that is in the vcf.gz file (e.g. "chr1:179520511:C/G"); similar to whitelist feature in Tapestri Insights v2
# Always set filter_cells=False; if filter_cells=True, only genomically complete cells will be loaded 
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mFileNotFoundError[0m                         Traceback (most recent call last)
Cell [0;32mIn[5], line 6[0m
[1;32m      3[0m h5path [38;5;241m=[39m [38;5;124m'[39m[38;5;124m/Users/botero/Desktop/Sample data/4-cell-lines-AML-multiomics/4-cell-lines-AML-multiomics.dna+protein.h5[39m[38;5;124m'[39m
[1;32m      5[0m [38;5;66;03m# Load the data[39;00m
[0;32m----> 6[0m sample [38;5;241m=[39m [43mms[49m[38;5;241;43m.[39;49m[43mload[49m[43m([49m[43mh5path[49m[43m,[49m[43m [49m[43mraw[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m[43m [49m[43mfilter_variants[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m[43m [49m[43msingle[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m[43m [49m[43mwhitelist[49m[43m [49m[38;5;241;43m=[39;49m[43m [49m[43m[[49m[43m][49m[43m,[49m[43m [49m[43mfilter_cells[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m)[49m 
[1;32m      8[0m [38;5;66;03m# Always set raw=False; if raw=True, ALL barcodes will be loaded (rather than cell-associated barcodes)[39;00m
[1;32m      9[0m [38;5;66;03m# Always set filter_variants=True unless you can't detect an expected (target) variant. Additional filtering options are included in the DNA section below[39;00m
[1;32m     10[0m [38;5;66;03m# The single=True option loads multi-sample h5 files as a single sample object (compatible with this notebook)[39;00m
[1;32m     11[0m [38;5;66;03m# The whitelist option loads any variant that is in the vcf.gz file (e.g. "chr1:179520511:C/G"); similar to whitelist feature in Tapestri Insights v2[39;00m
[1;32m     12[0m [38;5;66;03m# Always set filter_cells=False; if filter_cells=True, only genomically complete cells will be loaded [39;00m

File [0;32m~/Documents/code/mosaic/src/missionbio/mosaic/io.py:172[0m, in [0;36mload[0;34m(filepath, filter_cells, filter_variants, whitelist, raw, single, variant_filter_config)[0m
[1;32m     58[0m [38;5;28;01mdef[39;00m [38;5;21mload[39m(
[1;32m     59[0m     filepath: Any,
[1;32m     60[0m     filter_cells: [38;5;28mbool[39m [38;5;241m=[39m [38;5;28;01mFalse[39;00m,
[0;32m   (...)[0m
[1;32m     65[0m     variant_filter_config: Optional[Dict[[38;5;28mstr[39m, [38;5;28mfloat[39m]] [38;5;241m=[39m [38;5;28;01mNone[39;00m,
[1;32m     66[0m ) [38;5;241m-[39m[38;5;241m>[39m Union[Sample, SampleGroup]:
[1;32m     67[0m [38;5;250m    [39m[38;5;124;03m"""[39;00m
[1;32m     68[0m [38;5;124;03m    Loading the .h5 file with one or more assays.[39;00m
[1;32m     69[0m 
[0;32m   (...)[0m
[1;32m    169[0m [38;5;124;03m        When the h5 file format is not supported.[39;00m
[1;32m    170[0m [38;5;124;03m    """[39;00m
[0;32m--> 172[0m     [38;5;28;01mwith[39;00m [43mH5Reader[49m[43m([49m[43mfilepath[49m[43m)[49m [38;5;28;01mas[39;00m reader:
[1;32m    173[0m         variants [38;5;241m=[39m _get_variants_of_interest(
[1;32m    174[0m             reader,
[1;32m    175[0m             filter_variants[38;5;241m=[39mfilter_variants,
[1;32m    176[0m             whitelist[38;5;241m=[39mwhitelist,
[1;32m    177[0m             variant_filter_config[38;5;241m=[39mvariant_filter_config,
[1;32m    178[0m         )
[1;32m    179[0m         barcodes [38;5;241m=[39m _get_cells_of_interest(reader, filter_cells[38;5;241m=[39mfilter_cells)

File [0;32m~/Documents/code/h5/src/missionbio/h5/data/reader.py:75[0m, in [0;36mH5Reader.__init__[0;34m(self, filename)[0m
[1;32m     73[0m     [38;5;28mself[39m[38;5;241m.[39m__file [38;5;241m=[39m filename
[1;32m     74[0m [38;5;28;01melse[39;00m:
[0;32m---> 75[0m     [38;5;28mself[39m[38;5;241m.[39m__file [38;5;241m=[39m stack[38;5;241m.[39menter_context([43mh5py[49m[38;5;241;43m.[39;49m[43mFile[49m[43m([49m[43mfilename[49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mr[39;49m[38;5;124;43m"[39;49m[43m)[49m)
[1;32m     76[0m [38;5;28mself[39m[38;5;241m.[39mfilename [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m__file[38;5;241m.[39mfilename
[1;32m     78[0m check_file([38;5;28mself[39m[38;5;241m.[39m__file)

File [0;32m~/miniconda3/envs/missionbio.mosaic/lib/python3.9/site-packages/h5py/_hl/files.py:562[0m, in [0;36mFile.__init__[0;34m(self, name, mode, driver, libver, userblock_size, swmr, rdcc_nslots, rdcc_nbytes, rdcc_w0, track_order, fs_strategy, fs_persist, fs_threshold, fs_page_size, page_buf_size, min_meta_keep, min_raw_keep, locking, alignment_threshold, alignment_interval, meta_block_size, **kwds)[0m
[1;32m    553[0m     fapl [38;5;241m=[39m make_fapl(driver, libver, rdcc_nslots, rdcc_nbytes, rdcc_w0,
[1;32m    554[0m                      locking, page_buf_size, min_meta_keep, min_raw_keep,
[1;32m    555[0m                      alignment_threshold[38;5;241m=[39malignment_threshold,
[1;32m    556[0m                      alignment_interval[38;5;241m=[39malignment_interval,
[1;32m    557[0m                      meta_block_size[38;5;241m=[39mmeta_block_size,
[1;32m    558[0m                      [38;5;241m*[39m[38;5;241m*[39mkwds)
[1;32m    559[0m     fcpl [38;5;241m=[39m make_fcpl(track_order[38;5;241m=[39mtrack_order, fs_strategy[38;5;241m=[39mfs_strategy,
[1;32m    560[0m                      fs_persist[38;5;241m=[39mfs_persist, fs_threshold[38;5;241m=[39mfs_threshold,
[1;32m    561[0m                      fs_page_size[38;5;241m=[39mfs_page_size)
[0;32m--> 562[0m     fid [38;5;241m=[39m [43mmake_fid[49m[43m([49m[43mname[49m[43m,[49m[43m [49m[43mmode[49m[43m,[49m[43m [49m[43muserblock_size[49m[43m,[49m[43m [49m[43mfapl[49m[43m,[49m[43m [49m[43mfcpl[49m[43m,[49m[43m [49m[43mswmr[49m[38;5;241;43m=[39;49m[43mswmr[49m[43m)[49m
[1;32m    564[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(libver, [38;5;28mtuple[39m):
[1;32m    565[0m     [38;5;28mself[39m[38;5;241m.[39m_libver [38;5;241m=[39m libver

File [0;32m~/miniconda3/envs/missionbio.mosaic/lib/python3.9/site-packages/h5py/_hl/files.py:235[0m, in [0;36mmake_fid[0;34m(name, mode, userblock_size, fapl, fcpl, swmr)[0m
[1;32m    233[0m     [38;5;28;01mif[39;00m swmr [38;5;129;01mand[39;00m swmr_support:
[1;32m    234[0m         flags [38;5;241m|[39m[38;5;241m=[39m h5f[38;5;241m.[39mACC_SWMR_READ
[0;32m--> 235[0m     fid [38;5;241m=[39m [43mh5f[49m[38;5;241;43m.[39;49m[43mopen[49m[43m([49m[43mname[49m[43m,[49m[43m [49m[43mflags[49m[43m,[49m[43m [49m[43mfapl[49m[38;5;241;43m=[39;49m[43mfapl[49m[43m)[49m
[1;32m    236[0m [38;5;28;01melif[39;00m mode [38;5;241m==[39m [38;5;124m'[39m[38;5;124mr+[39m[38;5;124m'[39m:
[1;32m    237[0m     fid [38;5;241m=[39m h5f[38;5;241m.[39mopen(name, h5f[38;5;241m.[39mACC_RDWR, fapl[38;5;241m=[39mfapl)

File [0;32mh5py/_objects.pyx:54[0m, in [0;36mh5py._objects.with_phil.wrapper[0;34m()[0m

File [0;32mh5py/_objects.pyx:55[0m, in [0;36mh5py._objects.with_phil.wrapper[0;34m()[0m

File [0;32mh5py/h5f.pyx:102[0m, in [0;36mh5py.h5f.open[0;34m()[0m

[0;31mFileNotFoundError[0m: [Errno 2] Unable to synchronously open file (unable to open file: name = '/Users/botero/Desktop/Sample data/4-cell-lines-AML-multiomics/4-cell-lines-AML-multiomics.dna+protein.h5', errno = 2, error message = 'No such file or directory', flags = 0, o_flags = 0)

